AWSTemplateFormatVersion: '2010-09-09'
Description: Serverless Image Processing Stack
Resources:
  UploadBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${AWS::AccountId}-uploads-bucket'
  ProcessedBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${AWS::AccountId}-processed-bucket'
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaS3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: !Sub 'arn:aws:s3:::${UploadBucket}/*'
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource: !Sub 'arn:aws:s3:::${ProcessedBucket}/*'
  ImageFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: ImageProcessor
      Runtime: python3.8
      Handler: handler.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Sub '${AWS::AccountId}-deployment-bucket'
        S3Key: function.zip
  PermissionForS3ToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ImageFunction
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceAccount: !Sub '${AWS::AccountId}'
      SourceArn: !GetAtt UploadBucket.Arn
  BucketNotification:
    Type: AWS::S3::BucketNotificationConfiguration
    Properties:
      Bucket: !Ref UploadBucket
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !GetAtt ImageFunction.Arn
    DependsOn:
      - PermissionForS3ToInvokeLambda
  AlertTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub '${AWS::StackName}-alerts'
  FunctionErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${AWS::StackName}-LambdaErrors'
      AlarmDescription: 'Alarm on Lambda function errors'
      Namespace: 'AWS/Lambda'
      MetricName: Errors
      Dimensions:
        - Name: FunctionName
          Value: !Ref ImageFunction
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Ref AlertTopic
Outputs:
  UploadsBucketName:
    Value: !Ref UploadBucket
  ProcessedBucketName:
    Value: !Ref ProcessedBucket
  AlertTopicArn:
    Value: !Ref AlertTopic